# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014, moco_beta
# This file is distributed under the same license as the Redis Documentation (Japanese) package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Redis Documentation (Japanese) 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-31 23:30+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/topics/sentinel-old.rst:2
# 13738f11f2e641afbb3c162af62f1a3c
msgid "Redis Sentinel Documentation"
msgstr ""

#: ../../source/topics/sentinel-old.rst:4
# 18d7a9d781574429b7ab67f84f64e1f6
msgid "Redis Sentinel is a system designed to help managing Redis instances. It performs the following three tasks:"
msgstr ""

#: ../../source/topics/sentinel-old.rst:7
# 2d45606b33dc42ee98bdb46dff4e71a8
msgid "**Monitoring**. Sentinel constantly check if your master and slave instances are working as expected."
msgstr ""

#: ../../source/topics/sentinel-old.rst:9
# 69f92958c2144f1d8d86c294bf9a3a40
msgid "**Notification**. Sentinel can notify the system administrator, or another computer program, via an API, that something is wrong with one of the monitored Redis instances."
msgstr ""

#: ../../source/topics/sentinel-old.rst:12
# e550bb3249314def89bc0b32dda1bdf0
msgid "**Automatic failover**. If a master is not working as expected, Sentinel can start a failover process where a slave is promoted to master, the other additional slaves are reconfigured to use the new master, and the applications using the Redis server informed about the new address to use when connecting."
msgstr ""

#: ../../source/topics/sentinel-old.rst:18
# fd97ec86bd394392982023b608905d83
msgid "Redis Sentinel is a distributed system, this means that usually you want to run multiple Sentinel processes across your infrastructure, and this processes will use agreement protocols in order to understand if a master is down and to perform the failover."
msgstr ""

#: ../../source/topics/sentinel-old.rst:23
# 6f18fc9076be4d10b50fb5da3c533f26
msgid "Redis Sentinel is shipped as a stand-alone executable called ``redis-sentinel`` but actually it is a special execution mode of the Redis server itself, and can be also invoked using the ``--sentinel`` option of the normal ``redis-sever`` executable."
msgstr ""

#: ../../source/topics/sentinel-old.rst:28
# d184cb3025304ae2bcff55275f5eec42
msgid "**WARNING:** Redis Sentinel is currently a work in progress. This document describes how to use what we is already implemented, and may change as the Sentinel implementation evolves."
msgstr ""

#: ../../source/topics/sentinel-old.rst:32
# 6a250b387b544312b23546f9cb3da36a
msgid "Redis Sentinel is compatible with Redis 2.4.16 or greater, and redis 2.6.0-rc6 or greater."
msgstr ""

#: ../../source/topics/sentinel-old.rst:36
# c7f68209e8fb4bd1bb5bd0e975d395b0
msgid "Obtaining Sentinel"
msgstr ""

#: ../../source/topics/sentinel-old.rst:38
# 0e76c2d8d44b4b17aced2d8cb2845b27
msgid "Currently Sentinel is part of the Redis *unstable* branch at github. To compile it you need to clone the *unstable* branch and compile Redis. You'll see a ``redis-sentinel`` executable in your ``src`` directory."
msgstr ""

#: ../../source/topics/sentinel-old.rst:42
# 6bef6006adff4100a818083597b13531
msgid "Alternatively you can use directly the ``redis-server`` executable itself, starting it in Sentinel mode as specified in the next paragraph."
msgstr ""

#: ../../source/topics/sentinel-old.rst:46
# c4fe45fcbc504f43b90bd7b136a6f985
msgid "Running Sentinel"
msgstr ""

#: ../../source/topics/sentinel-old.rst:48
# f12516deef484322bc88245954ad672b
msgid "If you are using the ``redis-sentinel`` executable (or if you have a symbolic link with that name to the ``redis-server`` executable) you can run Sentinel with the following command line:"
msgstr ""

#: ../../source/topics/sentinel-old.rst:56
# eec1a885072c4004a31aa11683f0f707
msgid "Otherwise you can use directly the ``redis-server`` executable starting it in Sentinel mode:"
msgstr ""

#: ../../source/topics/sentinel-old.rst:63
# 9b31c2663dfe45da84074a493d65101e
msgid "Both ways work the same."
msgstr ""

#: ../../source/topics/sentinel-old.rst:66
# e814dab0dd16486599eef33176483484
msgid "Configuring Sentinel"
msgstr ""

#: ../../source/topics/sentinel-old.rst:68
# 1ed4f9dd7e284da58cdc711fcd720fca
msgid "The Redis source distribution contains a file called ``sentinel.conf`` that is a self-documented example configuration file you can use to configure Sentinel, however a typical minimal configuration file looks like the following:"
msgstr ""

#: ../../source/topics/sentinel-old.rst:87
# 9a74ae37c89241a2921b43b3b5162aa4
msgid "The first line is used to tell Redis to monitor a master called *mymaster*, that is at address 127.0.0.1 and port 6379, with a level of agreement needed to detect this master as failing of 2 sentinels (if the agreement is not reached the automatic failover does not start)."
msgstr ""

#: ../../source/topics/sentinel-old.rst:92
# 90ec2391c2f64556b4f517ae230e7b8f
msgid "The other options are almost always in the form:"
msgstr ""

#: ../../source/topics/sentinel-old.rst:98
# 755405b80286483eae661c3219823a6f
msgid "And are used for the following purposes:"
msgstr ""

#: ../../source/topics/sentinel-old.rst:100
# 16119e8b605247649c20a9c3ea6ef167
msgid "``down-after-milliseconds`` is the time in milliseconds an instance should not be reachable (either does not reply to our PINGs or it is replying with an error) for a Sentinel starting to think it is down. After this time has elapsed the Sentinel will mark an instance as **subjectively down** (also known as ``SDOWN``), that is not enough to start the automatic failover. However if enough instances will think that there is a subjectively down condition, then the instance is marked as **objectively down**. The number of sentinels that needs to agree depends on the configured agreement for this master."
msgstr ""

#: ../../source/topics/sentinel-old.rst:109
# 7cc880c0a8584e288e92248ae1940ede
msgid "``can-failover`` tells this Sentinel if it should start a failover when an instance is detected as objectively down (also called ``ODOWN`` for simplicity). You may configure all the Sentinels to perform the failover if needed, or you may have a few Sentinels used only to reach the agreement, and a few more that are actually in charge to perform the failover."
msgstr ""

#: ../../source/topics/sentinel-old.rst:115
# 1f83c433fe834bfb8abf8355761dfe1a
msgid "``parallel-syncs`` sets the number of slaves that can be reconfigured to use the new master after a failover at the same time. The lower the number, the more time it will take for the failover process to complete, however if the slaves are configured to serve old data, you may not want all the slaves to resync at the same time with the new master, as while the replication process is mostly non blocking for a slave, there is a moment when it stops to load the bulk data from the master during a resync. You may make sure only one slave at a time is not reachable by setting this option to the value of 1."
msgstr ""

#: ../../source/topics/sentinel-old.rst:125
# 67aeb8fb88c84fce9da870a03a23a07e
msgid "The other options are described in the rest of this document and documented in the example sentinel.conf file shipped with the Redis distribution."
msgstr ""

#: ../../source/topics/sentinel-old.rst:130
# d8c0c0f8bb524a7d97460b84671a6420
msgid "SDOWN and ODOWN"
msgstr ""

#: ../../source/topics/sentinel-old.rst:132
# 398f6b24fa974e23ac2d14abb893b9ee
msgid "As already briefly mentioned in this document Redis Sentinel has two different concepts of *being down*, one is called a *Subjectively Down* condition (SDOWN) and is a down condition that is local to a given Sentinel instance. Another is called *Objectively Down* condition (ODOWN) and is reached when enough Sentinels (at least the number configured as the ``quorum`` parameter of the monitored master) have an SDOWN condition, and get feedbacks from other Sentinels using the ``SENTINEL is-master-down-by-addr`` command."
msgstr ""

#: ../../source/topics/sentinel-old.rst:141
# 532220cfc73f4a6ba359c7c4ffbd7a01
msgid "From the point of view of a Sentinel an SDOWN condition is reached if we don't receive a valid reply to PING requests for the number of seconds specified in the configuration as ``is-master-down-after-milliseconds`` parameter."
msgstr ""

#: ../../source/topics/sentinel-old.rst:146
# 87f7957149154511aedad900f9f32b4b
msgid "An acceptable reply to PING is one of the following:"
msgstr ""

#: ../../source/topics/sentinel-old.rst:148
# 3345ba94a9ed40049bb59a8ccb139252
msgid "PING replied with +PONG."
msgstr ""

#: ../../source/topics/sentinel-old.rst:149
# ab7875004df244bcaffbe6197cd9f87d
msgid "PING replied with -LOADING error."
msgstr ""

#: ../../source/topics/sentinel-old.rst:150
# bb99d59002c645c79c3849559874e409
msgid "PING replied with -MASTERDOWN error."
msgstr ""

#: ../../source/topics/sentinel-old.rst:152
# 0a821bd597f843a995f96114024ecc6b
msgid "Any other reply (or no reply) is considered non valid."
msgstr ""

#: ../../source/topics/sentinel-old.rst:154
# 0ec0508ac78a462f8ede0901f88cb1c8
msgid "Note that SDOWN requires that no acceptable reply is received for the whole interval configured, so for instance if the interval is 30000 milliseconds (30 seconds) and we receive an acceptable ping reply every 29 seconds, the instance is considered to be working."
msgstr ""

#: ../../source/topics/sentinel-old.rst:159
# 9cfbecb5fa4e4a9f9d16709a196f25f1
msgid "The ODOWN condition **only applies to masters**. For other kind of instances Sentinel don't require any agreement, so the ODOWN state is never reached for slaves and other sentinels."
msgstr ""

#: ../../source/topics/sentinel-old.rst:163
# bb5818080d454269af1be3e42ccd781f
msgid "The behavior of Redis Sentinel can be described by a set of rules that every Sentinel follows. The complete behavior of Sentinel as a distributed system composed of multiple Sentinels only results from this rules followed by every single Sentinel instance. The following is the first set of rules. In the course of this document more rules will be added in the appropriate sections."
msgstr ""

#: ../../source/topics/sentinel-old.rst:170
# de337b94260f4a1cbb854f8f6d127bd0
msgid "**Sentinel Rule #1**: Every Sentinel sends a **PING** request to every known master, slave, and sentinel instance, every second."
msgstr ""

#: ../../source/topics/sentinel-old.rst:173
# 5f42270055254d6a9306ee68a05b85c6
msgid "**Sentinel Rule #2**: An instance is Subjectively Down (**SDOWN**) if the latest valid reply to **PING** was received more than ``down-after-milliseconds`` milliseconds ago. Acceptable PING replies are: +PONG, -LOADING, -MASTERDOWN."
msgstr ""

#: ../../source/topics/sentinel-old.rst:178
# 6cb8a9be2e6341d39a4250fde3b0520c
msgid "**Sentinel Rule #3**: Every Sentinel is able to reply to the command **SENTINEL is-master-down-by-addr ``<ip> <port>``**. This command replies true if the specified address is the one of a master instance, and the master is in **SDOWN** state."
msgstr ""

#: ../../source/topics/sentinel-old.rst:183
# d175ff0308e047c0a5a92b1fece92b2b
msgid "**Sentinel Rule #4**: If a master is in **SDOWN** condition, every other Sentinel also monitoring this master, is queried for confirmation of this state, every second, using the **SENTINEL is-master-down-by-addr** command."
msgstr ""

#: ../../source/topics/sentinel-old.rst:188
# 4db3c46d272b4713a8cd023b69574729
msgid "**Sentinel Rule #5**: If a master is in **SDOWN** condition, and enough other Sentinels (to reach the configured quorum) agree about the condition, with a reply to **SENTINEL is-master-down-by-addr** that is no older than five seconds, then the master is marked as Objectively Down (**ODOWN**)."
msgstr ""

#: ../../source/topics/sentinel-old.rst:194
# dc19607e334241e4a1e90ff7e5bff4db
msgid "**Sentinel Rule #6**: Every Sentinel sends an **INFO** request to every known master and slave instance, one time every 10 seconds. If a master is in **ODOWN** condition, its slaves are asked for **INFO** every second instead of being asked every 10 seconds."
msgstr ""

#: ../../source/topics/sentinel-old.rst:199
# 6fef3d0f09c84b5cb68e353e93d56cd2
msgid "**Sentinel Rule #7**: If the **first** INFO reply a Sentinel receives about a master shows that it is actually a slave, Sentinel will update the configuration to actually monitor the master reported by the INFO output instead. So it is safe to start Sentinel against slaves."
msgstr ""

#: ../../source/topics/sentinel-old.rst:205
# e51fefd3b7fe4fb3b49ceddc23d7171c
msgid "Sentinels and Slaves auto discovery"
msgstr ""

#: ../../source/topics/sentinel-old.rst:207
# e7f6e87c17e041f4b3b83896c03ba3b7
msgid "While Sentinels stay connected with other Sentinels in order to reciprocally check the availability of each other, and to exchange messages, you don't need to configure the other Sentinel addresses in every Sentinel instance you run, as Sentinel uses the Redis master Pub/Sub capabilities in order to discover the other Sentinels that are monitoring the same master."
msgstr ""

#: ../../source/topics/sentinel-old.rst:214
# 1017fa3c32d04574a40538b7fbb2782d
msgid "This is obtained by sending *Hello Messages* into the channel named ``__sentinel__:hello``."
msgstr ""

#: ../../source/topics/sentinel-old.rst:217
# 8415fd34e5c1490fafa391879e47cac7
msgid "Similarly you don't need to configure what is the list of the slaves attached to a master, as Sentinel will auto discover this list querying Redis."
msgstr ""

#: ../../source/topics/sentinel-old.rst:221
# 92df9cc4529a4dcfbbd382141840c12c
msgid "**Sentinel Rule #8**: Every Sentinel publishes a message to every monitored master Pub/Sub channel ``__sentinel__:hello``, every five seconds, announcing its presence with ip, port, runid, and ability to failover (accordingly to ``can-failover`` configuration directive in ``sentinel.conf``)."
msgstr ""

#: ../../source/topics/sentinel-old.rst:227
# 52fd934340764fddb3bc128e40b3a0a0
msgid "**Sentinel Rule #9**: Every Sentinel is subscribed to the Pub/Sub channel ``__sentinel__:hello`` of every master, looking for unknown sentinels. When new sentinels are detected, we add them as sentinels of this master."
msgstr ""

#: ../../source/topics/sentinel-old.rst:232
# 841730fe222e4669b0560ae1d00b5033
msgid "**Sentinel Rule #10**: Before adding a new sentinel to a master a Sentinel always checks if there is already a sentinel with the same runid or the same address (ip and port pair). In that case all the matching sentinels are removed, and the new added."
msgstr ""

#: ../../source/topics/sentinel-old.rst:238
# 35bed0c5a96545d985c5e01c64f932cb
msgid "Sentinel API"
msgstr ""

#: ../../source/topics/sentinel-old.rst:240
# f34d93d6399a4e4cbc7ed82cfa956370
msgid "By default Sentinel runs using TCP port 26379 (note that 6379 is the normal Redis port). Sentinels accept commands using the Redis protocol, so you can use ``redis-cli`` or any other unmodified Redis client in order to talk with Sentinel."
msgstr ""

#: ../../source/topics/sentinel-old.rst:245
# 37566a44900b4dd3aa33705243fe27d0
msgid "There are two ways to talk with Sentinel: it is possible to directly query it to check what is the state of the monitored Redis instances from its point of view, to see what other Sentinels it knows, and so forth."
msgstr ""

#: ../../source/topics/sentinel-old.rst:250
# 3f4dd7f5b25640f49dd7dc7ef34c32ee
msgid "An alternative is to use Pub/Sub to receive *push style* notifications from Sentinels, every time some event happens, like a failover, or an instance entering an error condition, and so forth."
msgstr ""

#: ../../source/topics/sentinel-old.rst:255
# 5b9081bbbcfc48e09dd611c32e1edec6
msgid "Sentinel commands"
msgstr ""

#: ../../source/topics/sentinel-old.rst:257
# 44164e491c4f490b829b411805a33f3f
msgid "The following is a list of accepted commands:"
msgstr ""

#: ../../source/topics/sentinel-old.rst:259
# c24be7812bbd4d85893f03cb41323c5d
msgid "**PING** this command simply returns PONG."
msgstr ""

#: ../../source/topics/sentinel-old.rst:260
# 18eb41898ba748379bb1c7ff0ce4fae8
msgid "**SENTINEL masters** show a list of monitored masters and their state."
msgstr ""

#: ../../source/topics/sentinel-old.rst:262
# 496a78bd3a8f4d29ad4578e4ca059b01
msgid "**SENTINEL slaves ``<master name>``** show a list of slaves for this master, and their state."
msgstr ""

#: ../../source/topics/sentinel-old.rst:264
# 3a17331692834da5b8ceba9a1d572c44
msgid "**SENTINEL is-master-down-by-addr ``<ip> <port>``** return a two elements multi bulk reply where the first is 0 or 1 (0 if the master with that address is known and is in ``SDOWN`` state, 1 otherwise). The second element of the reply is the *subjective leader* for this master, that is, the ``runid`` of the Redis Sentinel instance that should perform the failover accordingly to the queried instance."
msgstr ""

#: ../../source/topics/sentinel-old.rst:270
# aa5565b326974413ad22d7f1b4f8734e
msgid "**SENTINEL get-master-addr-by-name ``<master name>``** return the ip and port number of the master with that name. If a failover is in progress or terminated successfully for this master it returns the address and port of the promoted slave."
msgstr ""

#: ../../source/topics/sentinel-old.rst:274
# 2c2827268117495581da0827aed48275
msgid "**SENTINEL reset ``<pattern>``** this command will reset all the masters with matching name. The pattern argument is a glob-style pattern. The reset process clears any previous state in a master (including a failover in progress), and removes every slave and sentinel already discovered and associated with the master."
msgstr ""

#: ../../source/topics/sentinel-old.rst:281
# 7138bcf176084701a9b996ac8367b115
msgid "Pub/Sub Messages"
msgstr ""

#: ../../source/topics/sentinel-old.rst:283
# 7fc17bd3c78d4bfb919dc385ec84b79f
msgid "A client can use a Sentinel as it was a Redis compatible Pub/Sub server (but you can't use ``PUBLISH``) in order to ``SUBSCRIBE`` or ``PSUBSCRIBE`` to channels and get notified about specific events."
msgstr ""

#: ../../source/topics/sentinel-old.rst:287
# 464ad86576f04732a5dd171d051117ff
msgid "The channel name is the same as the name of the event. For instance the channel named ``+sdown`` will receive all the notifications related to instances entering an ``SDOWN`` condition."
msgstr ""

#: ../../source/topics/sentinel-old.rst:291
# 1c3f21189b344ac68c36bf1024d81bfe
msgid "To get all the messages simply subscribe using ``PSUBSCRIBE *``."
msgstr ""

#: ../../source/topics/sentinel-old.rst:293
# b2c51ad8f5a24a209aa4cdbc3ba793a8
msgid "The following is a list of channels and message formats you can receive using this API. The first word is the channel / event name, the rest is the format of the data."
msgstr ""

#: ../../source/topics/sentinel-old.rst:297
# b1fa0d767c1046d5af712a7b7ee5f75d
msgid "Note: where *instance details* is specified it means that the following arguments are provided to identify the target instance:"
msgstr ""

#: ../../source/topics/sentinel-old.rst:304
# 7a1233f6fff04eedbfa872f258821cc3
msgid "The part identifying the master (from the @ argument to the end) is optional and is only specified if the instance is not a master itself."
msgstr ""

#: ../../source/topics/sentinel-old.rst:307
# fd1abb51241a4630b562d8cb3daa2c34
msgid "**+reset-master** ``<instance details>`` -- The master was reset."
msgstr ""

#: ../../source/topics/sentinel-old.rst:308
# d964bbb227e04ff2aadf2ddb74e76264
msgid "**+slave** ``<instance details>`` -- A new slave was detected and attached."
msgstr ""

#: ../../source/topics/sentinel-old.rst:310
# 2bbcef7409344472ba0c1dba353375d1
msgid "**+failover-state-reconf-slaves** ``<instance details>`` -- Failover state changed to ``reconf-slaves`` state."
msgstr ""

#: ../../source/topics/sentinel-old.rst:312
# 08e7580c47ca4589b0ded1fb82d5aaae
msgid "**+failover-detected** ``<instance details>`` -- A failover started by another Sentinel or any other external entity was detected (An attached slave turned into a master)."
msgstr ""

#: ../../source/topics/sentinel-old.rst:315
# 310e47ab9a864e0b9b520ecea93b91a1
msgid "**+slave-reconf-sent** ``<instance details>`` -- The leader sentinel sent the ``SLAVEOF`` command to this instance in order to reconfigure it for the new slave."
msgstr ""

#: ../../source/topics/sentinel-old.rst:318
# 76c9dc3f2ba34f59a3c7db8c2be1317f
msgid "**+slave-reconf-inprog** ``<instance details>`` -- The slave being reconfigured showed to be a slave of the new master ip:port pair, but the synchronization process is not yet complete."
msgstr ""

#: ../../source/topics/sentinel-old.rst:321
# 64d8396adbf44708b43158da0aab3019
msgid "**+slave-reconf-done** ``<instance details>`` -- The slave is now synchronized with the new master."
msgstr ""

#: ../../source/topics/sentinel-old.rst:323
# 5ed8808483b349b1bdeb48d7eb4e79d9
msgid "**-dup-sentinel** ``<instance details>`` -- One or more sentinels for the specified master were removed as duplicated (this happens for instance when a Sentinel instance is restarted)."
msgstr ""

#: ../../source/topics/sentinel-old.rst:326
# dd9ade1029a740ab926581134249d8db
msgid "**+sentinel** ``<instance details>`` -- A new sentinel for this master was detected and attached."
msgstr ""

#: ../../source/topics/sentinel-old.rst:328
# 55aa8c49a45d4761a902b6f39099c56f
msgid "**+sdown** ``<instance details>`` -- The specified instance is now in Subjectively Down state."
msgstr ""

#: ../../source/topics/sentinel-old.rst:330
# a2296a1ee81344bfbd6504db0465fd8b
msgid "**-sdown** ``<instance details>`` -- The specified instance is no longer in Subjectively Down state."
msgstr ""

#: ../../source/topics/sentinel-old.rst:332
# b270dd9d293f43c9975eed7992fffefd
msgid "**+odown** ``<instance details>`` -- The specified instance is now in Objectively Down state."
msgstr ""

#: ../../source/topics/sentinel-old.rst:334
# 81f721ce40ea4ce2888e502adfa638e9
msgid "**-odown** ``<instance details>`` -- The specified instance is no longer in Objectively Down state."
msgstr ""

#: ../../source/topics/sentinel-old.rst:336
# a474613646524ed6a52e28f149ae72cc
msgid "**+failover-takedown** ``<instance details>`` -- 25% of the configured failover timeout has elapsed, but this sentinel can't see any progress, and is the new leader. It starts to act as the new leader reconfiguring the remaining slaves to replicate with the new master."
msgstr ""

#: ../../source/topics/sentinel-old.rst:341
# 4846469927874c4399c7811f3d5006a9
msgid "**+failover-triggered** ``<instance details>`` -- We are starting a new failover as a the leader sentinel."
msgstr ""

#: ../../source/topics/sentinel-old.rst:343
# d56516d2439949558fe516f21c150d7c
msgid "**+failover-state-wait-start** ``<instance details>`` -- New failover state is ``wait-start``: we are waiting a fixed number of seconds, plus a random number of seconds before starting the failover."
msgstr ""

#: ../../source/topics/sentinel-old.rst:346
# 5724091d8ef24872b226a573f9ce06fe
msgid "**+failover-state-select-slave** ``<instance details>`` -- New failover state is ``select-slave``: we are trying to find a suitable slave for promotion."
msgstr ""

#: ../../source/topics/sentinel-old.rst:349
# 7683029e31cd4893b7a3047cd548d1ae
msgid "**no-good-slave** ``<instance details>`` -- There is no good slave to promote. Currently we'll try after some time, but probably this will change and the state machine will abort the failover at all in this case."
msgstr ""

#: ../../source/topics/sentinel-old.rst:353
# ff44ff94da4c4825ac0b399452c50000
msgid "**selected-slave** ``<instance details>`` -- We found the specified good slave to promote."
msgstr ""

#: ../../source/topics/sentinel-old.rst:355
# 33688bab91f14b24b824512ec42ea943
msgid "**failover-state-send-slaveof-noone** ``<instance details>`` -- We are trynig to reconfigure the promoted slave as master, waiting for it to switch."
msgstr ""

#: ../../source/topics/sentinel-old.rst:358
# 2599201c80504c33ab1abb51ad5c6802
msgid "**failover-end-for-timeout** ``<instance details>`` -- The failover terminated for timeout. If we are the failover leader, we sent a *best effort* ``SLAVEOF`` command to all the slaves yet to reconfigure."
msgstr ""

#: ../../source/topics/sentinel-old.rst:362
# 5b46568873444ca8acaed8e49cf4c3bf
msgid "**failover-end** ``<instance details>`` -- The failover terminated with success. All the slaves appears to be reconfigured to replicate with the new master."
msgstr ""

#: ../../source/topics/sentinel-old.rst:365
# 0c874e9de3c24047b981aa1a10b7e463
msgid "**switch-master** ``<master name> <oldip> <oldport> <newip> <newport>`` -- We are starting to monitor the new master, using the same name of the old one. The old master will be completely removed from our tables."
msgstr ""

#: ../../source/topics/sentinel-old.rst:369
# 22f0532364814037b4c6da89b07239b3
msgid "**failover-abort-x-sdown** ``<instance details>`` -- The failover was undoed (aborted) because the promoted slave appears to be in extended SDOWN state."
msgstr ""

#: ../../source/topics/sentinel-old.rst:372
# ca44b5023a4f463b966169e2e25c620e
msgid "**-slave-reconf-undo** ``<instance details>`` -- The failover aborted so we sent a ``SLAVEOF`` command to the specified instance to reconfigure it back to the original master instance."
msgstr ""

#: ../../source/topics/sentinel-old.rst:375
# cc05c4d048e14030b331b799fb02154d
msgid "**+tilt** -- Tilt mode entered."
msgstr ""

#: ../../source/topics/sentinel-old.rst:376
# a9e7e4837f35496baebb60ae8d11ab6d
msgid "**-tilt** -- Tilt mode exited."
msgstr ""

#: ../../source/topics/sentinel-old.rst:379
# 279c579ad44b4976aaef5870be7eea44
msgid "Sentinel failover"
msgstr ""

#: ../../source/topics/sentinel-old.rst:381
# 72a3e2d244474501be6cb60a3b7a21f5
msgid "The failover process consists on the following steps:"
msgstr ""

#: ../../source/topics/sentinel-old.rst:383
# f950023185554942aa5d5c373c2aa1c9
msgid "Recognize that the master is in ODOWN state."
msgstr ""

#: ../../source/topics/sentinel-old.rst:384
# 83d1ca333a6549fea2569bc12e4a972f
msgid "Understand who is the Sentinel that should start the failover, called **The Leader**. All the other Sentinels will be **The Observers**."
msgstr ""

#: ../../source/topics/sentinel-old.rst:386
# ec80047358f8468b924cff9d08c92133
msgid "The leader selects a slave to promote to master."
msgstr ""

#: ../../source/topics/sentinel-old.rst:387
# 1596a5f2fdb74bbd91d3968c2c28fa09
msgid "The promoted slave is turned into a master with the command **SLAVEOF NO ONE**."
msgstr ""

#: ../../source/topics/sentinel-old.rst:389
# 1fc6594a8fdc45ffb73e841b873a7037
msgid "The observers see that a slave was turned into a master, so they know the failover started. **Note:** this means that any event that turns one of the slaves of a monitored master into a master (``SLAVEOF NO ONE`` command) will be sensed as the start of a failover process."
msgstr ""

#: ../../source/topics/sentinel-old.rst:394
# 6b07c48072c84ca9b906fc8d2352aab4
msgid "All the other slaves attached to the original master are configured with the **SLAVEOF** command in order to start the replication process with the new master."
msgstr ""

#: ../../source/topics/sentinel-old.rst:397
# bfc24f855d6a4abaaddd6138f39deab9
msgid "The leader terminates the failover process when all the slaves are reconfigured. It removes the old master from the table of monitored masters and adds the new master, *under the same name* of the original master."
msgstr ""

#: ../../source/topics/sentinel-old.rst:401
# bed5b39dde8b4cdf9dc0ef6f94b66920
msgid "The observers detect the end of the failover process when all the slaves are reconfigured. They remove the old master from the table and start monitoring the new master, exactly as the leader does."
msgstr ""

#: ../../source/topics/sentinel-old.rst:405
# e91407e57740464fa306676c18bae9fa
msgid "The election of the Leader is performed using the same mechanism used to reach the ODOWN state, that is, the **SENTINEL is-master-down-by-addr** command. It returns the leader from the point of view of the queried Sentinel, we call it the **Subjective Leader**, and is selected using the following rule:"
msgstr ""

#: ../../source/topics/sentinel-old.rst:411
# 0eaf186b78194ed9a612b904a972820c
msgid "We remove all the Sentinels that can't failover for configuration (this information is propagated using the Hello Channel to all the Sentinels)."
msgstr ""

#: ../../source/topics/sentinel-old.rst:414
# 2dfb03690b1e42a89e31b2e068971085
msgid "We remove all the Sentinels in SDOWN, disconnected, or with the last ping reply received more than ``SENTINEL_INFO_VALIDITY_TIME`` milliseconds ago (currently defined as 5 seconds)."
msgstr ""

#: ../../source/topics/sentinel-old.rst:417
# 44fa28bea9b249adb6f2027eed0e8c41
msgid "Of all the remaining instances, we get the one with the lowest ``runid``, lexicographically (every Redis instance has a Run ID, that is an identifier of every single execution)."
msgstr ""

#: ../../source/topics/sentinel-old.rst:421
# 7b7e9c16c7c64715859cab4510d21185
msgid "For a Sentinel to sense to be the **Objective Leader**, that is, the Sentinel that should start the failove process, the following conditions are needed."
msgstr ""

#: ../../source/topics/sentinel-old.rst:425
# fb1ba2ee75fd4ee68f2d2e17174a5526
msgid "It thinks it is the subjective leader itself."
msgstr ""

#: ../../source/topics/sentinel-old.rst:426
# 50bc5492a1d3413f98afd15774ffb2bc
msgid "It receives acknowledges from other Sentinels about the fact it is the leader: at least 50% plus one of all the Sentinels that were able to reply to the ``SENTINEL is-master-down-by-addr`` request should agree it is the leader, and additionally we need a total level of agreement at least equal to the configured quorum of the master instance that we are going to failover."
msgstr ""

#: ../../source/topics/sentinel-old.rst:433
# 6250739a02a14b65a71aca58d43a1856
msgid "Once a Sentinel things it is the Leader, the failover starts, but there is always a delay of five seconds plus an additional random delay. This is an additional layer of protection because if during this period we see another instance turning a slave into a master, we detect it as another instance staring the failover and turn ourselves into an observer instead. This is just a redundancy layer and should in theory never happen."
msgstr ""

#: ../../source/topics/sentinel-old.rst:441
# f9393707279940ad9f380927c2a35be6
msgid "**Sentinel Rule #11**: A **Good Slave** is a slave with the following requirements: \\* It is not in SDOWN nor in ODOWN condition. \\* We have a valid connection to it currently (not in DISCONNECTED state). \\* Latest PING reply we received from it is not older than five seconds. \\* Latest INFO reply we received from it is not older than five seconds. \\* The latest INFO reply reported that the link with the master is down for no more than the time elapsed since we saw the master entering SDOWN state, plus ten times the configured ``down_after_milliseconds`` parameter. So for instance if a Sentinel is configured to sense the SDOWN condition after 10 seconds, and the master is down since 50 seconds, we accept a slave as a Good Slave only if the replication link was disconnected less than ``50+(10*10)`` seconds (two minutes and half more or less). \\* It is not flagged as DEMOTE (see the section about resurrecting masters)."
msgstr ""

#: ../../source/topics/sentinel-old.rst:455
# c20aa88087484547a03bc11a075fe254
msgid "**Sentinel Rule #12**: A **Subjective Leader** from the point of view of a Sentinel, is the Sentinel (including itself) with the lower runid monitoring a given master, that also replied to PING less than 5 seconds ago, reported to be able to do the failover via Pub/Sub hello channel, and is not in DISCONNECTED state."
msgstr ""

#: ../../source/topics/sentinel-old.rst:461
# f9951edac9ae441fae41c6bb26a9b67c
msgid "**Sentinel Rule #12**: If a master is down we ask ``SENTINEL is-master-down-by-addr`` to every other connected Sentinel as explained in Sentinel Rule #4. This command will also reply with the runid of the **Subjective Leader** from the point of view of the asked Sentinel. A given Sentinel believes to be the **Objective Leader** of a master if it is reported to be the subjective leader by N Sentinels (including itself), where: \\* N must be equal or greater to the configured quorum for this master. \\* N mast be equal or greater to the majority of the voters (``num_votres/2+1``), considering only the Sentinels that also reported the master to be down."
msgstr ""

#: ../../source/topics/sentinel-old.rst:472
# b887f6c3b8ff4b7cb44611ee9a24b592
msgid "**Sentinel Rule #13**: A Sentinel starts the failover as a **Leader** (that is, the Sentinel actually sending the commands to reconfigure the Redis servers) if the following conditions are true at the same time: \\* The master is in ODOWN condition. \\* The Sentinel is configured to perform the failover with ``can-failover`` set to yes. \\* There is at least a Good Slave from the point of view of the Sentinel. \\* The Sentinel believes to be the Objective Leader. \\* There is no failover in progress already detected for this master."
msgstr ""

#: ../../source/topics/sentinel-old.rst:481
# 156d8813c2f248fe963fdce7ad45c011
msgid "**Sentinel Rule #14**: A Sentinel detects a failover as an **Observer** (that is, the Sentinel just follows the failover generating the appropriate events in the log file and Pub/Sub interface, but without actively reconfiguring instances) if the following conditions are true at the same time: \\* There is no failover already in progress. \\* A slave instance of the monitored master turned into a master. However the failover **will NOT be sensed as started if the slave instance turns into a master and at the same time the runid has changed** from the previous one. This means the instance turned into a master because of a restart, and is not a valid condition to consider it a slave election."
msgstr ""

#: ../../source/topics/sentinel-old.rst:492
# 0edc5a8cf9374851bb53e44d70afb95c
msgid "**Sentinel Rule #15**: A Sentinel starting a failover as leader does not immediately starts it. It enters a state called **wait-start**, that lasts a random amount of time between 5 seconds and 15 seconds. During this time **Sentinel Rule #14** still applies: if a valid slave promotion is detected the failover as leader is aborted and the failover as observer is detected."
msgstr ""

#: ../../source/topics/sentinel-old.rst:500
# 117b015168404b948b1643e4b8b04dfa
msgid "End of failover"
msgstr ""

#: ../../source/topics/sentinel-old.rst:502
# 7c2aa160f15f49c78695dcfe17a60b69
msgid "The failover process is considered terminated from the point of view of a single Sentinel if:"
msgstr ""

#: ../../source/topics/sentinel-old.rst:505
#: ../../source/topics/sentinel-old.rst:513
# e38531914df7453ca18dcd4a061b2268
# 1786445c78614ef3987d84a9a61ef594
msgid "The promoted slave is not in SDOWN condition."
msgstr ""

#: ../../source/topics/sentinel-old.rst:506
#: ../../source/topics/sentinel-old.rst:514
# 4f05c90719cf49cdb7009103fff8c447
# 9ddb1a31584a4cb58e56472909ce5049
msgid "A slave was promoted as new master."
msgstr ""

#: ../../source/topics/sentinel-old.rst:507
# 96e4b2df396b47678ed2ca2e5d5b103e
msgid "All the other slaves are configured to use the new master."
msgstr ""

#: ../../source/topics/sentinel-old.rst:509
# fe76870ad43f4584afb238846405419b
msgid "Note: Slaves that are in SDOWN state are ignored."
msgstr ""

#: ../../source/topics/sentinel-old.rst:511
# 7ef63c23571041aa9c15b278866a6868
msgid "Also the failover state is considered terminate if:"
msgstr ""

#: ../../source/topics/sentinel-old.rst:515
# f17aaaac64ae4aa78f95bb81859f520c
msgid "At least ``failover-timeout`` milliseconds elapsed since the last progress."
msgstr ""

#: ../../source/topics/sentinel-old.rst:518
# 601c52176506403d8f3bfcbfbecb78fd
msgid "The ``failover-timeout`` value can be configured in sentinel.conf for every different slave."
msgstr ""

#: ../../source/topics/sentinel-old.rst:521
# 3ab222fe2bb246d5be0f90696c7be2b7
msgid "Note that when a leader terminates a failover for timeout, it sends a ``SLAVEOF`` command in a best-effort way to all the slaves yet to be configured, in the hope that they'll receive the command and replicate with the new master eventually."
msgstr ""

#: ../../source/topics/sentinel-old.rst:526
# bb9ff8febbd14c788241f9410c5326b3
msgid "**Sentinel Rule #16** A failover is considered complete if for a leader or observer if: \\* One slave was promoted to master (and the Sentinel can detect that this actually happened via INFO output), and all the additional slaves are all configured to replicate with the new slave (again, the sentinel needs to sense it using the INFO output). \\* There is already a correctly promoted slave, but the configured ``failover-timeout`` time has already elapsed without any progress in the reconfiguration of the additional slaves. In this case a leader sends a best effort ``SLAVEOF`` command is sent to all the not yet configured slaves. In both the two above conditions the promoted slave **must be reachable** (not in SDOWN state), otherwise a failover is never considered to be complete."
msgstr ""

#: ../../source/topics/sentinel-old.rst:540
# e15f0ce9e5f2480d944af92b3f7ae4a4
msgid "Leader failing during failover"
msgstr ""

#: ../../source/topics/sentinel-old.rst:542
# 53399d436e6a4561aa02bb20b1073e37
msgid "If the leader fails when it has yet to promote the slave into a master, and it fails in a way that makes it in SDOWN state from the point of view of the other Sentinels, if enough Sentinels remained to reach the quorum the failover will automatically continue using a new leader (the subjective leader of all the remaining Sentinels will change because of the SDOWN state of the previous leader)."
msgstr ""

#: ../../source/topics/sentinel-old.rst:549
# 222a1704ed8847989fbbc0271e67357e
msgid "If the failover was already in progress and the slave was already promoted, and possibly a few other slaves were already reconfigured, an observer that is the new objective leader will continue the failover in case no progresses are made for more than 25% of the time specified by the ``failover-timeout`` configuration option."
msgstr ""

#: ../../source/topics/sentinel-old.rst:555
# eddacb75a773400a98171fc402ebed87
msgid "Note that this is safe as multiple Sentinels trying to reconfigure slaves with duplicated SLAVEOF commands do not create any race condition, but at the same time we want to be sure that all the slaves are reconfigured in the case the original leader is no longer working."
msgstr ""

#: ../../source/topics/sentinel-old.rst:560
# 4a5435c2def34e86b436ab52efbc202a
msgid "**Sentinel Rule #17** A Sentinel that is an observer for a failover in progress will turn itself into a failover leader, continuing the configuration of the additional slaves, if all the following conditions are true: \\* A failover is in progress, and this Sentinel is an observer. \\* It detects to be an objective leader (so likely the previous leader is no longer reachable by other sentinels). \\* At least 25% of the configured ``failover-timeout`` has elapsed without any progress in the observed failover process."
msgstr ""

#: ../../source/topics/sentinel-old.rst:570
# 3c929d3e28fb46ffb99863c599cde3cd
msgid "Promoted slave failing during failover"
msgstr ""

#: ../../source/topics/sentinel-old.rst:572
# 68f94d8dd9e44b6197eef0bc88afadbb
msgid "If the promoted slave has an active SDOWN condition, a Sentinel will never sense the failover as terminated."
msgstr ""

#: ../../source/topics/sentinel-old.rst:575
# 108d7cbc8a624d69a0035911c18778ed
msgid "Additionally if there is an *extended SDOWN condition* (that is an SDOWN that lasts for more than ten times ``down-after-milliseconds`` milliseconds) the failover is aborted (this happens for leaders and observers), and the master starts to be monitored again as usually, so that a new failover can start with a different slave in case the master is still failing."
msgstr ""

#: ../../source/topics/sentinel-old.rst:582
# bd125a7891084d18aacf6d562a094dec
msgid "Note that when this happens it is possible that there are a few slaves already configured to replicate from the (now failing) promoted slave, so when the leader sentinel aborts a failover it sends a ``SLAVEOF`` command to all the slaves already reconfigured or in the process of being reconfigured to switch the configuration back to the original master."
msgstr ""

#: ../../source/topics/sentinel-old.rst:589
# 7c84e3b67cec43e9ad3e835478a0fad8
msgid "**Sentinel Rule #18** A Sentinel will consider the failover process aborted, both when acting as leader and when acting as an observer, in the following conditions are true: \\* A failover is in progress and a slave to promote was already selected (or in the case of the observer was already detected as master). \\* The promoted slave is in **Extended SDOWN** condition (continually in SDOWN condition for at least ten times the configured ``down-after-milliseconds``)."
msgstr ""

#: ../../source/topics/sentinel-old.rst:598
# 55724b7f07a04a28a8b5957cde7b3285
msgid "Resurrecting master"
msgstr ""

#: ../../source/topics/sentinel-old.rst:600
# 4c1a4ad1b55e4c6eb19f6d297c8690bd
msgid "After the failover, at some point the old master may return back online. Starting with Redis 2.6.13 Sentinel is able to handle this condition by automatically reconfiguring the old master as a slave of the new master."
msgstr ""

#: ../../source/topics/sentinel-old.rst:604
# bf4f41ee142142ba9f630bd8f502c9cf
msgid "This happens in the following way:"
msgstr ""

#: ../../source/topics/sentinel-old.rst:606
# 7260b8e73fb041d1ab74fe54d4f461ec
msgid "After the failover has started from the point of view of a Sentinel, either as a leader, or as an observer that detected the promotion of a slave, the old master is put in the list of slaves of the new master, but with a special ``DEMOTE`` flag (the flag can be seen in the ``SENTINEL SLAVES`` command output)."
msgstr ""

#: ../../source/topics/sentinel-old.rst:611
# f7f37027b66549d086a7ba760b77499a
msgid "Once the master is back online and it is possible to contact it again, if it still claims to be a master (from INFO output) Sentinels will send a ``SLAVEOF`` command trying to reconfigure it. Once the instance claims to be a slave, the ``DEMOTE`` flag is cleared."
msgstr ""

#: ../../source/topics/sentinel-old.rst:616
# d1acbbcb2bc8437691f0231cd904ef95
msgid "There is no single Sentinel in charge of turning the old master into a slave, so the process is resistant against failing sentinels. At the same time instances with the ``DEMOTE`` flag set are never selected as promotable slaves."
msgstr ""

#: ../../source/topics/sentinel-old.rst:621
# 35e69a3e8ae0439b80527c75a23ccdb6
msgid "In this specific case the ``+slave`` event is only generated only when the old master will report to be actually a slave again in its ``INFO`` output."
msgstr ""

#: ../../source/topics/sentinel-old.rst:625
# 99122479af6e485ab99b94f9f97c9e19
msgid "**Sentinel Rule #19**: Once the failover starts (either as observer or leader), the old master is added as a slave of the new master, flagged as ``DEMOTE``."
msgstr ""

#: ../../source/topics/sentinel-old.rst:629
# 3cf1eb6048ad4ac283ecccda3719d924
msgid "**Sentinel Rule #20**: A slave instance claiming to be a master, and flagged as ``DEMOTE``, is reconfigured via ``SLAVEOF`` every time a Sentinel receives an ``INFO`` output where the wrong role is detected."
msgstr ""

#: ../../source/topics/sentinel-old.rst:633
# c6b06ec8f87044818e78a1b25518570b
msgid "**Sentinel Rule #21**: The ``DEMOTE`` flag is cleared as soon as an ``INFO`` output shows the instance to report itself as a slave."
msgstr ""

#: ../../source/topics/sentinel-old.rst:637
# 84f1272396e94d9bb45b26bef3f69f7d
msgid "Manual interactions"
msgstr ""

#: ../../source/topics/sentinel-old.rst:639
# aa30d7bb1b0947858dcd89cb5d83e531
msgid "TODO: Manually triggering a failover with SENTINEL FAILOVER."
msgstr ""

#: ../../source/topics/sentinel-old.rst:640
# 00c52d2ac84144f684ad6062d8b766ee
msgid "TODO: Pausing Sentinels with SENTINEL PAUSE, RESUME."
msgstr ""

#: ../../source/topics/sentinel-old.rst:643
# e695a052377640e2b2399c60d6d1a982
msgid "The failback process"
msgstr ""

#: ../../source/topics/sentinel-old.rst:645
# cee8ad555b3e40bcbcfd7bb5dc4d8503
msgid "TODO: Sentinel does not perform automatic Failback."
msgstr ""

#: ../../source/topics/sentinel-old.rst:646
# 89357405692a4b2eb31544633f1f83ea
msgid "TODO: Document correct steps for the failback."
msgstr ""

#: ../../source/topics/sentinel-old.rst:649
# b238e65868ef49bda5e3ae8c3321b6cf
msgid "Clients configuration update"
msgstr ""

#: ../../source/topics/sentinel-old.rst:651
#: ../../source/topics/sentinel-old.rst:699
#: ../../source/topics/sentinel-old.rst:704
# 44f3f9a1aaa146c7a59e3febb5410229
# f20b7f39992941dbb25156c0ad18586b
# a57df119bb30437f8ceb2516490df04c
msgid "Work in progress."
msgstr ""

#: ../../source/topics/sentinel-old.rst:654
# ec1ea53b5934436eabec01df60d6f0fd
msgid "TILT mode"
msgstr ""

#: ../../source/topics/sentinel-old.rst:656
# 77134b2934d1403f894989286f265465
msgid "Redis Sentinel is heavily dependent on the computer time: for instance in order to understand if an instance is available it remembers the time of the latest successful reply to the PING command, and compares it with the current time to understand how old it is."
msgstr ""

#: ../../source/topics/sentinel-old.rst:661
# b830ca2e628d46539d4eb757e2327d61
msgid "However if the computer time changes in an unexpected way, or if the computer is very busy, or the process blocked for some reason, Sentinel may start to behave in an unexpected way."
msgstr ""

#: ../../source/topics/sentinel-old.rst:665
# b327da1b8930416bb375f5d9d0bffcce
msgid "The TILT mode is a special \"protection\" mode that a Sentinel can enter when something odd is detected that can lower the reliability of the system. The Sentinel timer interrupt is normally called 10 times per second, so we expect that more or less 100 milliseconds will elapse between two calls to the timer interrupt."
msgstr ""

#: ../../source/topics/sentinel-old.rst:671
# 0e723a54e88a425db4e27d02e4fd1bee
msgid "What a Sentinel does is to register the previous time the timer interrupt was called, and compare it with the current call: if the time difference is negative or unexpectedly big (2 seconds or more) the TILT mode is entered (or if it was already entered the exit from the TILT mode postponed)."
msgstr ""

#: ../../source/topics/sentinel-old.rst:677
# 432989204d554c56a37b1140b4e293f6
msgid "When in TILT mode the Sentinel will continue to monitor everything, but:"
msgstr ""

#: ../../source/topics/sentinel-old.rst:679
# 8be4905acab749cdad8c2c7c310b7fd1
msgid "It stops acting at all."
msgstr ""

#: ../../source/topics/sentinel-old.rst:680
# fd702644a4b1498ba40116bcf792c72c
msgid "It starts to reply negatively to ``SENTINEL is-master-down-by-addr`` requests as the ability to detect a failure is no longer trusted."
msgstr ""

#: ../../source/topics/sentinel-old.rst:683
# 632d24dc12664d1f8a9f62e5fcd30567
msgid "If everything appears to be normal for 30 second, the TILT mode is exited."
msgstr ""

#: ../../source/topics/sentinel-old.rst:687
# 05a31e7ddbd0469997b14d13f54b89aa
msgid "Handling of -BUSY state"
msgstr ""

#: ../../source/topics/sentinel-old.rst:689
# 260c0044d65f4520b6cdb3ea7ee8643a
msgid "(Warning: Yet not implemented)"
msgstr ""

#: ../../source/topics/sentinel-old.rst:691
# cb60755d665d4ffb82ca39bc595b175b
msgid "The -BUSY error is returned when a script is running for more time than the configured script time limit. When this happens before triggering a fail over Redis Sentinel will try to send a \"SCRIPT KILL\" command, that will only succeed if the script was read-only."
msgstr ""

#: ../../source/topics/sentinel-old.rst:697
# e0e38ebc10364de486e1881b1ef518cd
msgid "Notifications via user script"
msgstr ""

#: ../../source/topics/sentinel-old.rst:702
# 2fa6067ac0b24095a7567b3fb1ba1865
msgid "Suggested setup"
msgstr ""

#: ../../source/topics/sentinel-old.rst:707
# 9f78112a53a945a7bdcf45af341c8a67
msgid "APPENDIX A - Implementation and algorithms"
msgstr ""

#: ../../source/topics/sentinel-old.rst:710
# c391bd36acf341469f040dcd4d202822
msgid "Duplicate Sentinels removal"
msgstr ""

#: ../../source/topics/sentinel-old.rst:712
# 059966690e9d44a1a6075ef2b8dac12c
msgid "In order to reach the configured quorum we absolutely want to make sure that the quorum is reached by different physical Sentinel instances. Under no circumstance we should get agreement from the same instance that for some reason appears to be two or multiple distinct Sentinel instances."
msgstr ""

#: ../../source/topics/sentinel-old.rst:718
# 5d0341168c63437584494e9e4ad3e959
msgid "This is enforced by an aggressive removal of duplicated Sentinels: every time a Sentinel sends a message in the Hello Pub/Sub channel with its address and runid, if we can't find a perfect match (same runid and address) inside the Sentinels table for that master, we remove any other Sentinel with the same runid OR the same address. And later add the new Sentinel."
msgstr ""

#: ../../source/topics/sentinel-old.rst:725
# a831c6402c644bcd8c16a15d9a1111ce
msgid "For instance if a Sentinel instance is restarted, the Run ID will be different, and the old Sentinel with the same IP address and port pair will be removed."
msgstr ""

#: ../../source/topics/sentinel-old.rst:730
# 81aed7e3a5b547f29f25fbcfccdbac3d
msgid "Selection of the Slave to promote"
msgstr ""

#: ../../source/topics/sentinel-old.rst:732
# 4040ce1034b142eb8272dfab70376429
msgid "If a master has multiple slaves, the slave to promote to master is selected checking the slave priority (a new configuration option of Redis instances that is propagated via INFO output, still not implemented), and picking the one with lower priority value (it is an integer similar to the one of the MX field of the DNS system)."
msgstr ""

#: ../../source/topics/sentinel-old.rst:738
# 46c6e623d94f4be0befff81c796aa17a
msgid "All the slaves that appears to be disconnected from the master for a long time are discarded."
msgstr ""

#: ../../source/topics/sentinel-old.rst:741
# 0160bdedf1bd4cb6a2ad85363b735cd4
msgid "If slaves with the same priority exist, the one with the lexicographically smaller Run ID is selected."
msgstr ""

#: ../../source/topics/sentinel-old.rst:744
# 5d30a1fab8f3488782fd8f967affb83d
msgid "Note: because currently slave priority is not implemented, the selection is performed only discarding unreachable slaves and picking the one with the lower Run ID."
msgstr ""

#: ../../source/topics/sentinel-old.rst:748
# 97b0a7f3e40f4e6ebb6a2dedf2e36709
msgid "**Sentinel Rule #22**: A Sentinel performing the failover as leader will select the slave to promote, among the existing **Good Slaves** (See rule #11), taking the one with the lower slave priority. When priority is the same the slave with lexicographically lower runid is preferred."
msgstr ""

#: ../../source/topics/sentinel-old.rst:754
# 932eaa557b0e481f971e8e912a173a56
msgid "APPENDIX B - Get started with Sentinel in five minutes"
msgstr ""

#: ../../source/topics/sentinel-old.rst:756
# 54452535cc5d4d27a6d83cc3e10fc3d8
msgid "If you want to try Redis Sentinel, please follow this steps:"
msgstr ""

#: ../../source/topics/sentinel-old.rst:758
# 5ca2087653c041dd9968444b13d58b67
msgid "Clone the *unstable* branch of the Redis repository at github (it is the default branch)."
msgstr ""

#: ../../source/topics/sentinel-old.rst:760
# 2770a2596e134038b1d20ff0078f970f
msgid "Compile it with \"make\"."
msgstr ""

#: ../../source/topics/sentinel-old.rst:761
# e8306312bedf4834ba545992c7a19950
msgid "Start a few normal Redis instances, using the ``redis-server`` compiled in the *unstable* branch. One master and one slave is enough."
msgstr ""

#: ../../source/topics/sentinel-old.rst:764
# 45d1be5b84eb4b9eb1bca69cb191377e
msgid "Use the ``redis-sentinel`` executable to start three instances of Sentinel, with ``redis-sentinel /path/to/config``."
msgstr ""

#: ../../source/topics/sentinel-old.rst:767
# d829405ed5754da6a75bcf8f6a63be99
msgid "To create the three configurations just create three files where you put something like that:"
msgstr ""

#: ../../source/topics/sentinel-old.rst:779
# ec924faf2854459e9b6dfe179b96e8c7
msgid "Note: where you see ``port 26379``, use 26380 for the second Sentinel, and 26381 for the third Sentinel (any other different non colliding port will do of course). Also note that the ``down-after-milliseconds`` configuration option is set to just five seconds, that is a good value to play with Sentinel, but not good for production environments."
msgstr ""

#: ../../source/topics/sentinel-old.rst:785
# 7ec208caa4664b58adb2ab9d715ad337
msgid "At this point you should see something like the following in every Sentinel you are running:"
msgstr ""

#: ../../source/topics/sentinel-old.rst:820
# 30357cc903fc46479aef33abcb885e76
msgid "To see how the failover works, just put down your slave (for instance sending ``DEBUG SEGFAULT`` to crash it) and see what happens."
msgstr ""

#: ../../source/topics/sentinel-old.rst:823
# ed66ea95488244eb90d3a76444ea3d14
msgid "This HOWTO is a work in progress, more information will be added in the near future."
msgstr ""

